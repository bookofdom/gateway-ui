{
  "dev": {
    "components": "component library",
    "bootstrap": "bootstrap",
    "grid": "grid",
    "grid_plural": "grids",
    "container": "container",
    "row": "row",
    "column": "column",
    "option": "option",
    "option_plural": "options",
    "heading": "heading",
    "secondary": "secondary text",
    "button": "button",
    "button_plural": "buttons"
  },
  "actions": {
    "toggle-navivagation": "toggle navigation",
    "login": "login",
    "logout": "logout",
    "delete": "delete",
    "save": "save",
    "cancel": "cancel",
    "clear": "clear",
    "new": "new",
    "new-x": "new $t(__x__)",
    "edit": "edit",
    "edit-x": "edit $t(__x__)",
    "import": "import",
    "export": "export",
    "toggle": "toggle",
    "toggle-x": "toggle $t(__x__)",
    "execute": "execute",
    "specify-custom": "specify custom",
    "drop-or-click-to-upload": "drop or click to upload",
    "select-add-component-type": "select a component type to add",
    "fullscreen": "fullscreen",
    "filter": "filter",
    "reset": "reset",
    "reset-password": "reset password",
    "sign-up": "sign up",
    "navigate": "navigate"
  },
  "nav": {
    "home": "home",
    "analyze": "analyze",
    "define-api": "define API",
    "define-api_plural": "define APIs",
    "build": "build",
    "manage-api": "manage API",
    "manage-api_plural": "manage APIs",
    "manage-store": "manage store",
    "manage-store_plural": "manage stores",
    "manage": "manage",
    "build-app": "build app",
    "build-app_plural": "build apps",
    "app_plural": "apps",
    "terms-and-conditions": "terms and conditions",
    "push": "push",
    "descriptions": {
      "define-api": "define API endpoints, remote integration services, and workflow business logic",
      "manage-api": "set up keys and specify entitlement rules across your APIs",
      "manage-store": "manage data in an object store",
      "manage": "manage local store data and push notifications",
      "store-collections": "manage local store collections and data",
      "push": "manage push channels, devices, and messages",
      "build-app": "build multi-channel apps with the designer platform (login required)",
      "proxy-endpoints": "define or edit proxy endpoints and corresponding logic",
      "environments": "specify environments, variables, and other attributes",
      "endpoint-groups": "named groups collect proxy endpoints together for convenience",
      "remote-endpoints": "define the remote API endpoints that provide backing services for proxy endpoints",
      "hosts": "define named hosts associated with this API",
      "libraries": "define shared libraries for use in JavaScript code blocks",
      "logs": "view, search, and stream logs",
      "api-documentation": "view interactive API documentation and test API calls",
      "shared-components": "build reusable components for proxy endpoints",
      "terms-and-conditions": "by registering for an account you accept the terms and conditions",
      "formatted": {
        "analyze": "<b>(coming soon)</b><br>Gain insights into API usage",
        "manage-api": "<b>(coming soon)</b><br>Set up keys and specify entitlement rules across your APIs",
        "build-app": "<b>(login required)</b><br>Build multi-channel apps with the designer platform"
      }
    },
    "support": "support",
    "documentation_plural": "docs",
    "help": "help",
    "account": "account"
  },
  "resources": {
    "account": "account",
    "account_plural": "accounts",
    "user": "user",
    "user_plural": "users",
    "api": "API",
    "api_plural": "APIs",
    "api-endpoint": "API endpoint",
    "api-endpoint_plural": "API endpoints",
    "proxy-endpoint": "proxy endpoint",
    "proxy-endpoint_plural": "proxy endpoints",
    "proxy-endpoint-route": "route",
    "proxy-endpoint-route_plural": "routes",
    "proxy-endpoint-component": "component",
    "proxy-endpoint-component_plural": "components",
    "proxy-endpoint-component-call": "call",
    "proxy-endpoint-component-call_plural": "calls",
    "proxy-endpoint-component-transformation": "transformation",
    "proxy-endpoint-component-transformation_plural": "transformations",
    "proxy-endpoint-test": "test",
    "proxy-endpoint-test_plural": "tests",
    "proxy-endpoint-test-header": "header",
    "proxy-endpoint-test-header_plural": "headers",
    "proxy-endpoint-test-query-parameter": "query parameter",
    "proxy-endpoint-test-query-parameter_plural": "query parameters",
    "proxy-endpoint-test-argument": "argument",
    "proxy-endpoint-test-argument_plural": "arguments",
    "proxy-endpoint-schema": "schema validation",
    "proxy-endpoint-schema_plural": "schema validations",
    "push-channel": "channel",
    "push-channel_plural": "channels",
    "push-channel-device": "device",
    "push-channel-device_plural": "devices",
    "push-channel-device-message": "$t(resources.push-message)",
    "push-channel-device-message_plural": "$t(resources.push-message_plural)",
    "push-channel-message": "$t(resources.push-message)",
    "push-channel-message_plural": "$t(resources.push-message_plural)",
    "push-device": "device",
    "push-device_plural": "devices",
    "push-manual-message": "manual message",
    "push-manual-message_plural": "manual messages",
    "push-message": "message",
    "push-message_plural": "messages",
    "environment": "environment",
    "environment_plural": "environments",
    "environment-variable": "environment variable",
    "environment-variable_plural": "environment variables",
    "endpoint-group": "group",
    "endpoint-group_plural": "groups",
    "remote-endpoint": "remote endpoint",
    "remote-endpoint_plural": "remote endpoints",
    "remote-endpoint-environment-datum": "environment datum",
    "remote-endpoint-environment-datum_plural": "environment data",
    "remote-endpoint-header": "header",
    "remote-endpoint-header_plural": "headers",
    "remote-endpoint-query-parameter": "query parameter",
    "remote-endpoint-query-parameter_plural": "query parameters",
    "remote-endpoint-environment-datum-scratch-pad": "scratch pad",
    "remote-endpoint-environment-datum-scratch-pad_plural": "scratch pads",
    "remote-endpoint-push-platform": "push platform",
    "remote-endpoint-push-platform_plural": "push platforms",
    "host": "host",
    "host_plural": "hosts",
    "library": "shared library",
    "library_plural": "shared libraries",
    "log": "log",
    "log_plural": "logs",
    "notificaiton": "notification",
    "notification_plural": "notifications",
    "api-documentation": "API documentation",
    "api-documentation_plural": "$t(resources.api-documentation)",
    "shared-component": "$t(resources.proxy-endpoint-component)",
    "shared-component_plural": "$t(resources.proxy-endpoint-component_plural)",
    "shared-component-call": "$t(resources.proxy-endpoint-component-call)",
    "shared-component-call_plural": "$t(resources.proxy-endpoint-component-call_plural)",
    "shared-component-transformation": "$t(resources.proxy-endpoint-component-transformation)",
    "shared-component-transformation_plural": "$t(resources.proxy-endpoint-component-transformation_plural)",
    "store-collection": "collection",
    "store-collection_plural": "collections",
    "store-object": "object",
    "store-object_plural": "objects",
    "stripe-card": "credit card",
    "stripe-card_plural": "credit cards",
    "plan": "plan",
    "plan_plural": "plans"
  },
  "fields": {
    "account_name": "account name",
    "connect_timeout": "connect timeout",
    "ack_timeout": "ack timeout",
    "timeout_retries": "timeout retries",
    "qos": "QOS",
    "stamp": "stamp",
    "token": "token",
    "expires": "expires",
    "api_key": "API key",
    "development": "development",
    "topic": "topic",
    "certificate": "certificate",
    "publish_endpoint": "publish endpoint",
    "id": "id",
    "code": "code",
    "error": "error",
    "request": "request",
    "response": "response",
    "admin": "admin",
    "email": "email",
    "password": "password",
    "confirmed": "confirmed",
    "password_confirmation": "confirm password",
    "name": "name",
    "description": "description",
    "cors_allow_origin": "CORS allowed origin",
    "cors_allow_headers": "CORS allowed headers",
    "cors_allow_credentials": "CORS allow credentials",
    "cors_request_headers": "CORS request headers",
    "cors_max_age": "CORS max age",
    "cors_enabled": "CORS enabled",
    "enable_swagger": "enable swagger",
    "type": "type",
    "active": "active",
    "path": "path",
    "url": "URL",
    "method": "method",
    "methods": "methods",
    "conditional": "conditional logic",
    "conditional_positive": "conditional",
    "call-conditional": "call conditional logic",
    "endpoint_name_override": "endpoint name override",
    "before-type": "before type",
    "after-type": "after type",
    "logic": "logic",
    "before": "before request logic",
    "after": "after request logic",
    "session_type": "session type",
    "session_header": "session header",
    "session_name": "session name",
    "session_auth_key": "session auth key",
    "session_encryption_key": "session encryption key",
    "session_auth_key_rotate": "session auth key rotate",
    "session_encryption_key_rotate": "session encryption key rotate",
    "codename": "codename",
    "hostname": "hostname",
    "value": "value",
    "server": "server",
    "port": "port",
    "username": "username",
    "database": "database",
    "schema": "schema",
    "transactions": "transactions",
    "timeout": "connection timeout",
    "execution-timeout": "execution timeout",
    "maxidle": "max. idle connections",
    "maxopen": "max. open connections",
    "host": "host",
    "content_type": "content type",
    "body": "body",
    "body_parse_error": "parse error",
    "log": "log",
    "limit": "connection pool limit",
    "location": "location",
    "sslmode": "SSL mode",
    "wsdl": "WSDL",
    "service_name": "service name",
    "endpoint_name": "endpoint name",
    "operation_name": "operation name",
    "action_name": "action name",
    "auth_scheme": "authentication scheme",
    "search": "search",
    "start_date": "start date",
    "end_date": "end date",
    "maximum_lines": "maximum lines",
    "import": "import",
    "show_javascript_errors": "show $t(languages.javascript) errors",
    "base_url": "base URL",
    "status": "status",
    "interpreter": "interpreter",
    "filepath": "file path",
    "script": "script",
    "request_schema": "request schema",
    "response_same_as_request": "response same as request",
    "response_schema": "response schema",
    "organization": "organization",
    "use_tls": "use TLS",
    "encoded_certificate": "certificate",
    "encoded_private_key": "private key",
    "server_name": "server name",
    "private_key_password": "private key password",
    "title": "title",
    "required": "required",
    "pattern_name": "name is regex",
    "min_properties": "min properties",
    "max_properties": "max properties",
    "min_items": "min items",
    "max_items": "max items",
    "unique_items": "unique items",
    "multiple_of": "multiple of",
    "minimum": "minimum",
    "maximum": "maximum",
    "exclusive_minimum": "exclusive minimum",
    "exclusive_maximum": "exclusive maximum",
    "pattern": "regex pattern",
    "min_length": "min length",
    "max_length": "max length",
    "encrypt": "encrypt",
    "additional_properties": "additional properties",
    "subscribe_endpoint": "subscribe endpoint",
    "unsubscribe_endpoint": "unsubscribe endpoint",
    "sender": "sender",
    "protocol": "protocol",
    "plan": "plan",
    "cc_number": "credit card number",
    "cc_exp_month": "exp. month",
    "cc_exp_year": "exp. year",
    "cc_cvc": "CVC",
    "cc_address_zip": "ZIP",
    "javascript_timeout": "JavaScript timeout",
    "repository": "repository",
    "tag": "tag",
    "pull_newest": "pull newest",
    "command": "command",
    "arguments": "arguments",
    "environment_variables": "environment variables",
    "registry": "registry",
    "help": {
      "timeout": "Number of seconds.",
      "content-type": "Looking for something else? Specify a custom Content-Type in the request headers.",
      "enable_swagger": "Enable Swagger to browse API documentation and publish `swagger.json`."
    },
    "api": {
      "name": "API name"
    },
    "remote_endpoint": {
      "name": "remote endpoint name"
    }
  },
  "prompts": {
    "generic": "choose one",
    "choose-x": "choose $t(__x__)",
    "confirm-delete": "are you sure you want to delete this record?",
    "confirm-abandon": "are you sure you want to leave this record without saving?",
    "change-language": "change language",
    "optional-x": "$t(__x__) (optional)"
  },
  "states": {
    "active": "active",
    "inactive": "inactive",
    "streaming": "streaming",
    "not-streaming": "not streaming"
  },
  "http-methods": {
    "get": "GET",
    "post": "POST",
    "put": "PUT",
    "delete": "DELETE"
  },
  "languages": {
    "javascript": "JavaScript",
    "json": "JSON",
    "english": "English",
    "spanish": "Español",
    "brazilian-portuguese": "Português Brasileiro",
    "hindi": "मानक हिन्दी"
  },
  "errors": {
    "unknown": "an unknown error occurred",
    "no-user-with-that-email": "no user with that email",
    "invalid-password": "invalid password",
    "login": "we were unable to log you in",
    "invalid-json": "invalid JSON",
    "invalid-json-schema": "invalid JSON schema",
    "invalid-cc-number": "invalid card number",
    "invalid-cc-expiry": "invalid expiry",
    "invalid-cc-cvc": "invalid CVC"
  },
  "successes": {
    "push-manual-message": "message sent successfully",
    "saved-successfully": "saved successfully",
    "password-reset": "password reset confirmation email sent",
    "password-reset-confirmation": "password successfully reset",
    "sign-up": "please check your email for your sign up confirmation"
  },
  "headers": {
    "x-workflow": "__x__ workflow"
  },
  "conditionals": {
    "if": "if",
    "unless": "unless"
  },
  "notifications": {
    "create": "__user__ created one __resource__",
    "update": "__user__ updated one __resource__",
    "delete": "__user__ deleted one __resource__",
    "import": "__user__ imported one __resource__"
  },
  "types": {
    "push-platform": {
      "osx": "OS X",
      "ios": "iOS",
      "gcm": "GCM",
      "mqtt": "MQTT"
    },
    "editor": {
      "code": "code",
      "design": "design"
    },
    "json-type": {
      "object": "object",
      "array": "array",
      "null": "null",
      "boolean": "boolean",
      "integer": "integer",
      "number": "number",
      "string": "string"
    },
    "proxy-endpoint-component": {
      "single": "single call",
      "multi": "multi-call",
      "js": "logic",
      "shared": "shared"
    },
    "session": {
      "client": "client",
      "server": "server"
    },
    "remote-endpoint": {
      "push": "push",
      "http": "HTTP",
      "soap": "SOAP",
      "store": "store",
      "sqlserver": "SQL Server",
      "postgres": "PostgreSQL",
      "mysql": "MySQL",
      "mongodb": "MongoDB",
      "ldap": "LDAP",
      "script": "Script",
      "hana": "HANA",
      "redis": "Redis",
      "oracle": "Oracle",
      "smtp": "SMTP",
      "db2": "DB2",
      "docker": "Docker",
      "status-types": {
        "success": "success",
        "failed": "failed",
        "pending": "pending",
        "processing": "processing"
      },
      "encrypt-modes": {
        "disable": "disable",
        "true": "true",
        "false": "false"
      },
      "ssl-modes": {
        "disable": "disable",
        "allow": "allow",
        "prefer": "prefer",
        "require": "require"
      },
      "auth-schemes": {
        "basic": "basic",
        "wsse": "WSSE"
      },
      "protocols": {
        "tcpip": "TCPIP",
        "ssl": "SSL"
      }
    }
  }
}
