{
  "dev": {
    "components": "component library",
    "bootstrap": "bootstrap",
    "grid": "grid",
    "grid_plural": "grids",
    "container": "container",
    "row": "row",
    "column": "column",
    "option": "option",
    "option_plural": "options",
    "heading": "heading",
    "secondary": "secondary text",
    "button": "button",
    "button_plural": "buttons"
  },
  "actions": {
    "toggle-navivagation": "toggle navigation",
    "login": "login",
    "logout": "logout",
    "delete": "delete",
    "save": "save",
    "cancel": "cancel",
    "new": "new",
    "new-x": "new $t(__x__)",
    "edit": "edit",
    "edit-x": "edit $t(__x__)",
    "import": "import",
    "export": "export",
    "toggle": "toggle",
    "toggle-x": "toggle $t(__x__)",
    "execute": "execute",
    "specify-custom": "specify custom",
    "drop-or-click-to-upload": "drop or click to upload",
    "select-add-component-type": "select a component type to add",
    "fullscreen": "fullscreen"
  },
  "nav": {
    "home": "home",
    "define-api": "define API",
    "define-api_plural": "define APIs",
    "manage-api": "manage API",
    "manage-api_plural": "manage APIs",
    "build-app": "build app",
    "build-app_plural": "build apps",
    "descriptions": {
      "define-api": "define API endpoints and workflow business logic",
      "manage-api": "set up keys and specify entitlement rules across your APIs",
      "build-app": "build multi-channel apps with the AnyPresence platform (login required)",
      "proxy-endpoints": "define or edit proxy endpoints and corresponding logic",
      "environments": "specify environments, variables, and other attributes",
      "endpoint-groups": "named groups collect proxy endpoints together for convenience",
      "remote-endpoints": "define the remote API endpoints that provide backing services for proxy endpoints",
      "hosts": "define named hosts associated with this API",
      "libraries": "define shared libraries for use in JavaScript code blocks",
      "formatted": {
        "manage-api": "<b>(coming soon)</b><br>Set up keys and specify entitlement rules across your APIs",
        "build-app": "<b>(login required)</b><br>Build multi-channel apps with the AnyPresence platform"
      }
    },
    "support": "support",
    "documentation_plural": "docs",
    "help": "help",
    "account": "account"
  },
  "brands": {
    "anypresence": "AnyPresence",
    "gateway": "Gateway",
    "just-apis": "Just APIs",
    "brought-to-you-by-anypresence": "brought to you by AnyPresence"
  },
  "resources": {
    "user": "user",
    "user_plural": "users",
    "api": "API",
    "api_plural": "APIs",
    "api-endpoint": "API endpoint",
    "api-endpoint_plural": "API endpoints",
    "proxy-endpoint": "proxy endpoint",
    "proxy-endpoint_plural": "proxy endpoints",
    "proxy-endpoint-route": "route",
    "proxy-endpoint-route_plural": "routes",
    "proxy-endpoint-component": "component",
    "proxy-endpoint-component_plural": "components",
    "proxy-endpoint-component-call": "call",
    "proxy-endpoint-component-call_plural": "calls",
    "proxy-endpoint-component-transformation": "transformation",
    "proxy-endpoint-component-transformation_plural": "transformations",
    "proxy-endpoint-test": "test",
    "proxy-endpoint-test_plural": "tests",
    "proxy-endpoint-test-header": "header",
    "proxy-endpoint-test-header_plural": "headers",
    "proxy-endpoint-test-query-parameter": "query parameter",
    "proxy-endpoint-test-query-parameter_plural": "query parameters",
    "environment": "environment",
    "environment_plural": "environments",
    "environment-variable": "environment variable",
    "environment-variable_plural": "environment variables",
    "endpoint-group": "group",
    "endpoint-group_plural": "groups",
    "remote-endpoint": "remote endpoint",
    "remote-endpoint_plural": "remote endpoints",
    "remote-endpoint-environment-datum": "environment datum",
    "remote-endpoint-environment-datum_plural": "environment data",
    "remote-endpoint-header": "header",
    "remote-endpoint-header_plural": "headers",
    "remote-endpoint-query-parameter": "query parameter",
    "remote-endpoint-query-parameter_plural": "query parameters",
    "host": "host",
    "host_plural": "hosts",
    "library": "shared library",
    "library_plural": "shared libraries"
  },
  "proxy-endpoint-component-types": {
    "single-proxy": "single call",
    "multi-proxy": "multi-call",
    "javascript-logic": "logic"
  },
  "fields": {
    "email": "email",
    "password": "password",
    "password_confirmation": "confirm password",
    "name": "name",
    "description": "description",
    "cors_allow_origin": "CORS allowed origin",
    "cors_allow_headers": "CORS allowed headers",
    "cors_allow_credentials": "CORS allow credentials",
    "cors_request_headers": "CORS request headers",
    "cors_max_age": "CORS max age",
    "cors_enabled": "CORS enabled",
    "type": "type",
    "active": "active",
    "path": "path",
    "url": "URL",
    "method": "method",
    "methods": "methods",
    "conditional": "conditional logic",
    "conditional_positive": "conditional",
    "call-conditional": "call conditional logic",
    "endpoint_name_override": "endpoint name override",
    "before-type": "before type",
    "after-type": "after type",
    "logic": "logic",
    "before": "before request logic",
    "after": "after request logic",
    "session_name": "session name",
    "session_auth_key": "session auth key",
    "session_encryption_key": "session encryption key",
    "session_auth_key_rotate": "session auth key rotate",
    "session_encryption_key_rotate": "session encryption key rotate",
    "codename": "codename",
    "hostname": "hostname",
    "value": "value",
    "server": "server",
    "port": "port",
    "username": "username",
    "database": "database",
    "schema": "schema",
    "transactions": "transactions",
    "timeout": "connection timeout",
    "maxidle": "max. idle connections",
    "maxopen": "max. open connections",
    "host": "host",
    "content_type": "content type",
    "body": "body",
    "log": "log",
    "limit": "connection pool limit",
    "location": "location",
    "sslmode": "SSL mode",
    "help": {
      "timeout": "Number of seconds.",
      "content-type": "Looking for something else?  Specify a custom Content-Type in the request headers."
    }
  },
  "prompts": {
    "generic": "choose one",
    "choose-x": "choose $t(__x__)",
    "confirm-delete": "are you sure you want to delete this record?",
    "confirm-abandon": "are you sure you want to leave this record without saving?",
    "change-language": "change language"
  },
  "states": {
    "active": "active",
    "inactive": "inactive"
  },
  "http-methods": {
    "get": "GET",
    "post": "POST",
    "put": "PUT",
    "delete": "DELETE"
  },
  "languages": {
    "javascript": "JavaScript",
    "english": "English",
    "spanish": "Español",
    "brazilian-portuguese": "Português Brasileiro",
    "hindi": "मानक हिन्दी"
  },
  "errors": {
    "unknown": "an unknown error occurred",
    "no-user-with-that-email": "no user with that email",
    "invalid-password": "invalid password"
  },
  "successes": {
    "saved-successfully": "saved successfully"
  },
  "headers": {
    "x-workflow": "__x__ workflow"
  },
  "conditionals": {
    "if": "if",
    "unless": "unless"
  },
  "types": {
    "remote-endpoint": {
      "http": "HTTP",
      "sqlserver": "SQL Server",
      "postgres": "PostgreSQL",
      "mysql": "MySQL",
      "mongodb": "MongoDB",
      "ssl-modes": {
        "disable": "disable",
        "allow": "allow",
        "prefer": "prefer",
        "require": "require"
      }
    }
  }
}
